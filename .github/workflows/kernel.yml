on: [ workflow_dispatch ]
jobs:
  kernel:
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v3
      - name: sudo apt -yqq update && sudo apt -yqq install
        run: sudo apt -yqq update && sudo apt -yqq install python3 bison flex make gcc g++ wget curl git
      - name: protonclang
        run: cd ~ && git clone --depth=1 https://github.com/kdrag0n/proton-clang
      - name: make_kernel
        run: |
          cd Kernel
          dd if=../Makefile.wno-error of=./Makefile
          dd if=../config_docker of=./arch/arm64/configs/bloomq_kor_single_defconfig
          export PATH="$HOME/proton-clang/bin:$PATH"
          export CC=clang
          export CROSS_COMPILE=aarch64-linux-gnu-
          export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
          export AR=llvm-ar
          export NM=llvm-nm
          export OBJCOPY=llvm-objcopy
          export OBJDUMP=llvm-objdump
          export STRIP=llvm-strip
          make -j8 -C $(pwd) O=$(pwd)/out CC=clang ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- DTC_EXT=$(pwd)/tools/dtc CONFIG_BUILD_ARM64_DT_OVERLAY=y bloomq_kor_single_defconfig
          make -j8 -C $(pwd) O=$(pwd)/out CC=clang ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- DTC_EXT=$(pwd)/tools/dtc CONFIG_BUILD_ARM64_DT_OVERLAY=y || true
          true
          cd ..
      
      - name: artifact
        uses: actions/upload-artifact@v3
        with:
          name: out
          path: Kernel/out
          retention-days: 1
